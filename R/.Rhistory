rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2331)
rv<-rv_mix(N,p)
#mu1<-rnorm(1,0,1)
#mu2<-rnorm(1,2,1)
mu1<-0.5
mu2<-1
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N,rv){
#rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
#mu1<-rnorm(1,0,1)
#mu2<-rnorm(1,2,1)
mu1<-0.5
mu2<-1
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N,rv){
#rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.2
mu2<-1.6
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N,rv){
#rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.2
mu2<-1.8
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N){
rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.2
mu2<-1.8
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N){
rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.2
mu2<-1.8
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N){
rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N)
EM_mix<-function(mu1,sigma1,mu2,sigma2,p,N,rv){
#rv<-rv_mix(N,p)
phi<-rep(0,N)
for (i in 1:1000) {
#E-step
for (j in 1:N) {
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi[j]<-p*f2/((1-p)*f1+p*f2)
}
#M-step
mu1<-sum((1-phi)*rv)/sum(1-phi)
s1<-sum((1-phi)*(rv-mu1)^2)/sum(1-phi)
mu2<-sum(phi*rv)/sum(phi)
s2<-sum(phi*(rv-mu2)^2)/sum(phi)
sigma1<-sqrt(s1)
sigma2<-sqrt(s2)
p<-sum(phi)/N
}
return(c(mu1,sigma1,mu2,sigma2,p))
}
rv_mix<-function(N,p){
u1<-rnorm(N,0,1)
u2<-rnorm(N,2,1)
j<-runif(N)
k<-as.integer(j>p)
u<-k*u1+(1-k)*u2
return(u)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)[1]
Gibbs_mix<-function(mu1,mu2,sigma1,sigma2,p,N,rv){
X<-matrix(0,1000,2)
z<-rep(0,N)
for (i in 1:1000) {
for (j in 1:N){
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi<-p*f2/((1-p)*f1+p*f2)
u<-runif(1)
if(u<phi){
z[j]<-1
}else{
z[j]<-0
}
}
mu1<-sum((1-z)*rv)/sum(1-z)
mu2<-sum(z*rv)/sum(z)
X[i,1]<-rnorm(1,mu1,sigma1)
X[i,2]<-rnorm(1,mu2,sigma2)
}
return(X)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM<-EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
sigma1<-EM[2]
sigma2<-EM[4]
p<-EM[5]
Gibbs_mix(mu1,mu2,sigma1,sigma2,p,N,rv)
Gibbs_mix<-function(mu1,mu2,sigma1,sigma2,p,N,rv){
X<-matrix(0,1000,2)
z<-rep(0,N)
for (i in 1:1000) {
for (j in 1:N){
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi<-p*f2/((1-p)*f1+p*f2)
u<-runif(1)
if(u<phi){
z[j]<-1
}else{
z[j]<-0
}
}
mu1<-sum((1-z)*rv)/sum(1-z)
mu2<-sum(z*rv)/sum(z)
X[i,1]<-rnorm(1,mu1,sigma1)
X[i,2]<-rnorm(1,mu2,sigma2)
}
return(X)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM<-EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
sigma1<-EM[2]
sigma2<-EM[4]
p<-EM[5]
T<-Gibbs_mix(mu1,mu2,sigma1,sigma2,p,N,rv)
View(`T`)
Gibbs_mix<-function(mu1,mu2,sigma1,sigma2,p,N,rv){
X<-matrix(0,10000,2)
z<-rep(0,N)
for (i in 1:10000) {
for (j in 1:N){
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi<-p*f2/((1-p)*f1+p*f2)
u<-runif(1)
if(u<phi){
z[j]<-1
}else{
z[j]<-0
}
}
mu1<-sum((1-z)*rv)/sum(1-z)
mu2<-sum(z*rv)/sum(z)
X[i,1]<-rnorm(1,mu1,sigma1)
X[i,2]<-rnorm(1,mu2,sigma2)
}
return(X)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM<-EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
sigma1<-EM[2]
sigma2<-EM[4]
p<-EM[5]
T<-Gibbs_mix(mu1,mu2,sigma1,sigma2,p,N,rv)
View(`T`)
View(`T`)
Gibbs_mix<-function(mu1,mu2,sigma1,sigma2,p,N,rv){
X<-matrix(0,1000,2)
z<-rep(0,N)
for (i in 1:1000) {
for (j in 1:N){
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi<-p*f2/((1-p)*f1+p*f2)
u<-runif(1)
if(u<phi){
z[j]<-1
}else{
z[j]<-0
}
}
mu1<-sum((1-z)*rv)/sum(1-z)
mu2<-sum(z*rv)/sum(z)
X[i,1]<-rnorm(1,mu1,sigma1)
X[i,2]<-rnorm(1,mu2,sigma2)
}
return(X)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM<-EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
sigma1<-EM[2]
sigma2<-EM[4]
p<-EM[5]
T<-Gibbs_mix(mu1,mu2,sigma1,sigma2,p,N,rv)
Gibbs_mix<-function(mu1,mu2,sigma1,sigma2,p,N,rv){
X<-matrix(0,1000,2)
z<-rep(0,N)
for (i in 1:1000) {
for (j in 1:N){
f1<-dnorm(rv[j],mu1,sigma1)
f2<-dnorm(rv[j],mu2,sigma2)
phi<-p*f2/((1-p)*f1+p*f2)
u<-runif(1)
if(u<phi){
z[j]<-1
}else{
z[j]<-0
}
}
mu1<-sum((1-z)*rv)/sum(1-z)
mu2<-sum(z*rv)/sum(z)
X[i,1]<-rnorm(1,mu1,sigma1)
X[i,2]<-rnorm(1,mu2,sigma2)
}
return(X)
}
N<-1000
p<-0.6
p_0<-0.5
set.seed(2335)
rv<-rv_mix(N,p)
mu1<-0.5
mu2<-1.5
sigma1<-sigma2<-sd(rv)
EM<-EM_mix(mu1,sigma1,mu2,sigma2,p_0,N,rv)
sigma1<-EM[2]
sigma2<-EM[4]
p<-EM[5]
T<-Gibbs_mix(mu1,mu2,sigma1,sigma2,p,N,rv)
R and Rcpp versions of gibbs sampler and vaac function are provided in this package
devtools::document()
devtools::document()
.Last.error.trace
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
install.packages("RcppEigen")
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
library(Rcpp)
dir_cpp <- 'C:/Users/echo33/Desktop/statistical computing/'
sourceCpp(paste0(dir_cpp,"ex2.cpp"))
install.packages("RcppSugar")
devtools::document()
rm(list = c("EM_mix", "Gibbs_mix", "rv_mix"))
devtools::document()
devtools::check()
devtools::document()
dextools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
